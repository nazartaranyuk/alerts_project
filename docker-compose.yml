services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: alerts-app:dev
    container_name: app
    environment:
      - PG_DSN=postgres://myuser:secret@db:5432/alarms?sslmode=disable
      - JWT_SECRET=devsecretchange
      - APP_ENV=dev
      - PORT=:8080
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 2s
      retries: 6

  db:
    image: postgres:16
    container_name: db
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=alarms
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data:Z
      - ./init:/docker-entrypoint-initdb.d:ro,z
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U myuser -d alarms" ]
      interval: 5s
      timeout: 3s
      retries: 20

  prometheus:
    image: prom/prometheus:v2.55.0
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    volumes:
      - type: bind
        source: ./prometheus.yml
        target: /etc/prometheus/prometheus.yml
        read_only: true

  grafana:
    image: grafana/grafana:11.2.0
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus

volumes:
  pgdata:
  grafana-data:
